<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NParser</name>
    </assembly>
    <members>
        <member name="T:NParser.Abstract.IParser`1">
            <summary>
            Interface for parsing web pages.
            </summary>
            <typeparam name="T">Parsing result type.</typeparam>
        </member>
        <member name="M:NParser.Abstract.IParser`1.ParseAsync(System.String)">
            <summary>
            Parse the site.
            </summary>
            <param name="url">Website Url.</param>
            <returns>Parsing result as type <see cref="!:T"/>.</returns>
        </member>
        <member name="T:NParser.Parser`1">
            <summary>
            <para>Abstract class with basic logic for parsing.</para>
            <para>Child classes should override <see cref="M:NParser.Parser`1.ParseHtmlAsync(AngleSharp.Dom.IDocument)"/> for parsing a specific site using NuGet AngleSharp.</para>
            </summary>
            <typeparam name="T">Parsing result type.</typeparam>
        </member>
        <member name="F:NParser.Parser`1._loader">
            <summary>
            Object for loading HTML of any Url.
            </summary>
        </member>
        <member name="F:NParser.Parser`1._documentLoader">
            <summary>
            Object for loading <see cref="T:AngleSharp.Dom.IDocument"/> of any Url.
            </summary>
        </member>
        <member name="M:NParser.Parser`1.#ctor">
            <summary>
            Create an instance of <see cref="T:NParser.Parser`1"/> with default settings.
            </summary>
        </member>
        <member name="M:NParser.Parser`1.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Create an instance of <see cref="T:NParser.Parser`1"/> with prepared <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <param name="client">Prepared instance of <see cref="T:System.Net.Http.HttpClient"/>.</param>
        </member>
        <member name="M:NParser.Parser`1.#ctor(System.Action{System.Net.HttpWebRequest})">
            <summary>
            Create an instance of <see cref="T:NParser.Parser`1"/> with prepared <see cref="T:System.Net.HttpWebRequest"/>.
            </summary>
            <param name="configureRequest"><see cref="T:System.Action"/> for setting properties of <see cref="T:System.Net.HttpWebRequest"/>.</param>
        </member>
        <member name="M:NParser.Parser`1.#ctor(HtmlLoading.Loaders.Abstractions.HtmlLoader)">
            <summary>
            Create an instance of <see cref="T:NParser.Parser`1"/>.
            </summary>
            <param name="loader">Object for loading HTML of any Url.</param>
        </member>
        <member name="M:NParser.Parser`1.ParseAsync(System.String)">
            <summary>
            <inheritdoc/> This method use logic of overridden method <see cref="M:NParser.Parser`1.ParseHtmlAsync(AngleSharp.Dom.IDocument)"/>.
            </summary>
            <param name="url"><inheritdoc/></param>
            <returns><inheritdoc/></returns>
            <exception cref="T:System.Net.Http.HttpRequestException"></exception>
            <exception cref="T:System.Net.WebException"></exception>
        </member>
        <member name="M:NParser.Parser`1.ParseHtmlAsync(AngleSharp.Dom.IDocument)">
            <summary>
            Get the necessary data from HTML using AngleSharp and convert it to type <see cref="!:T"/>.
            </summary>
            <param name="html">Webpage HTML code.</param>
            <returns>Parsing result as type <see cref="!:T"/>.</returns>
        </member>
        <member name="T:NParser.DefaultParser">
            <summary>
            Simple class for parsing webpages using CSS-selectors.
            </summary>
        </member>
        <member name="F:NParser.DefaultParser._documentLoader">
            <summary>
            Object for loading <see cref="T:AngleSharp.Dom.IDocument"/> of any Url.
            </summary>
        </member>
        <member name="M:NParser.DefaultParser.ParseAsync(System.String,System.String)">
            <summary>
            Parse the site.
            </summary>
            <param name="url">Website Url.</param>
            <param name="query">Query with CSS-selectors.</param>
            <returns>Text content of all HTML document nodes that finded using CSS-selectors.</returns>
        </member>
    </members>
</doc>
